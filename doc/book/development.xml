<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
>
<chapter>
	<title>Using the development version</title>
	<section>
		<title>Obtaining the latest source code</title>
		<para>Waf is hosted on <ulink href="http://code.google.com/p/waf/source">Google code</ulink>, and uses Subversion for source control. To retrieve the development copy, use:
		<programlisting language="sh">
svn checkout http://waf.googlecode.com/svn/trunk/ waf-read-only
cd waf-read-only
./waf-light --make-waf
		</programlisting>
		</para>
		<para>
		To avoid regenerating Waf each time, the environment variable WAFCACHE can be used to point to the directory containing wafadmin:
		<programlisting language="sh">
export WAFDIR=/path/to/wafadmin
		</programlisting>
		</para>
		<para>
			Although the Waf binary depends on Python 2.3, the Waf source code depends on Python 2.4. When generating Waf, a parser modifies the source code and performs the following operations:
			<itemizedlist>
				<listitem>Move the decorators into simple function calls</listitem>
				<listitem>Add the imports for the module sets</listitem>
				<listitem>Comment stripping to reduce the size</listitem>
				<listitem>Redundant space elimination to reduce the size</listitem>
			</itemizedlist>
		</para>
	</section>

	<section>
		<title>Development norms and recommandations</title>
		<para>
			Though Waf is written in Python, additional restrictions apply to the source code:
			<itemizedlist>
				<listitem>Identation is tab-only, and the maximum line length is set to 200 characters</listitem>
				<listitem>The development code is kept compatible to Python 2.3, to the exception of decorators in the Tools directory.</listitem>
				<listitem>The wafadmin modules may not know anything of the Tools module to keep the Waf core small and language independant</listitem>
				<listitem>Api compatibility is maintained in the cycle of a minor version (from 1.5.0 to 1.5.9)</listitem>
			</itemizedlist>
		</para>
		<para>
			More code always means more bugs. Whenever possible, remove unnecessary code, and simplify the existing code base.
		</para>
	</section>
</chapter>

