<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
"http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
>
<chapter>
	<title>C and C++ projects</title>
	<section>
		<title>Writing a configuration header</title>
		<para>
			Writing configuration headers can be performed using the following methods:
			<programlisting language="python">
def configure(conf):
	conf.add_define('LIBF')
	conf.undefine('LIBF')
	conf.add_define('LIBF', 1)
	conf.add_define('LIBF_VERSION', '1.0.2')
	conf.write_config_header('config.h')
			</programlisting>
			The code snipped will produce the following <emphasis>config.h</emphasis> in the build directory:
			<programlisting language="sh">
build/
|-- c4che
|   |-- build.config.py
|   `-- default.cache.py
|-- config.log
`-- default
    `-- config.h
			</programlisting>
			The contents of the config.h for this example are
			<programlisting language="sh">
/* Configuration header created by Waf - do not edit */
#ifndef _CONFIG_H_WAF
#define _CONFIG_H_WAF

/* #undef NOLIBF */
#define LIBF 1
#define LIBF_VERSION "1.0.2"

#endif /* _CONFIG_H_WAF */
			</programlisting>
		</para>
	</section>

	<section>
		<title>Task generators for C/C++ builds</title>
		<para>
			TODO Detail the main task generator attributes, includes, cxxflags, etc
		</para>
	</section>

	<section>
		<title>The creation of C/C++ tasks</title>
		<para>
			TODO activity diagram needed here
		</para>
	</section>

	<section>
		<title>The Waf preprocessor</title>
		<para>
			Waf uses a preprocessor written in Python for finding the headers on which the source files depend (implicity dependencies). By default the preprocessing is limited to the files present in the project. To enable the preprocessor to find system headers, use the following code:
			<programlisting language="python">
import preproc
preproc.go_absolute = 1
			</programlisting>
		</para>
	</section>
</chapter>

