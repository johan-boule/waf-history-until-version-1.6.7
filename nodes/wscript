#! /usr/bin/env python3

top = '.'
out = 'bin'

def options(opt):
	return
	print(opt)

def configure(conf):
	pass

def build(bld):

	print('...')
	print("root", bld.root.abspath(), bld.root)
	print("srcnode", bld.srcnode.abspath(), bld.srcnode)
	print("env", bld.env)

	w = bld.path.find_resource('wscript')
	print("wscript", w.abspath(), w)

	x = bld.path.find_or_declare('xyz.txt')
	print("build file", x.abspath(), x)

	bld(rule='echo hi', always=True)
	bld(rule='touch ${TGT}', target='foo.txt', always=True)

def init(self):
	print('init')

def shutdown(self):
	print('shutdown')


def bar(ctx):
	print("command ok")


#-----------------------------------------------
# variant example below
# call "../waf debug"
#

import os
import Build, Constants, Options
from Base import command_context

@command_context('debug', 'build')
class debug_context(Build.BuildContext):
	def __init__(self, start=None):
		self.cache_dir = Options.out_dir + os.sep + Constants.CACHE_DIR
		self.out_dir = Options.out_dir + os.sep + 'test'
		Build.BuildContext.__init__(self, start=start)

# looks evil
#def debug(bld):
#	build(bld)

