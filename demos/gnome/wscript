#! /usr/bin/env python
# encoding: utf-8
# Thomas Nagy, 2006 (ita)

import os
import Params

# the following two variables are used by the target "waf dist"
VERSION='0.0.2'
APPNAME='gnome_test'

# these variables are mandatory ('/' are converted automatically)
srcdir = '.'
blddir = '_build_'

def build(bld):
	# process subfolders from here
	bld.add_subdirs('src pixmaps po')

def configure(conf):
	conf.checkTool('gcc gnome')

	conf.checkPkg('libgnome-2.0',        destvar='GNOME',    vnum='2.10.0')
	conf.checkPkg('libgnomeui-2.0',      destvar='GNOMEUI',  vnum='2.10.0')
	conf.checkPkg('gtk+-2.0',            destvar='GTK',      vnum='2.6.0')
	conf.checkPkg('glib-2.0',            destvar='GLIB',     vnum='2.6.0')
	conf.checkPkg('libbonobo-2.0',       destvar='BONOBO',   vnum='2.0.0')
	conf.checkPkg('libbonoboui-2.0',     destvar='BONOBOUI', vnum='2.0.0')
	conf.checkPkg('libglade-2.0',        destvar='GLADE',    vnum='2.0.1')
	conf.checkPkg('libgnomecanvas-2.0',  destvar='CANVAS',   vnum='2.0.1')
	conf.checkPkg('libgnomeprintui-2.2', destvar='PRINTUI',  vnum='2.2.0')
	conf.checkPkg('libgnomeprint-2.2',   destvar='PRINT',    vnum='2.2.0')
	conf.checkPkg('libxml-2.0',          destvar='XML',      vnum='2.4.23')
	conf.checkPkg('gdk-x11-2.0',         destvar='GDK',      vnum='1.0.0')

	conf.addDefine('VERSION', '"%s"' % VERSION)

	conf.addDefine('GETTEXT_PACKAGE', '"gnome-hello-2.0"')
	conf.addDefine('PACKAGE', '"gnome-hello"')

	#always defined to indicate that i18n is enabled */
	conf.addDefine('ENABLE_NLS', '1')

	# TODO
	#Define to 1 if you have the `bind_textdomain_codeset' function.
	conf.addDefine('HAVE_BIND_TEXTDOMAIN_CODESET', '1')

	# TODO
	#Define to 1 if you have the `dcgettext' function.
	conf.addDefine('HAVE_DCGETTEXT', '1')

	#Define to 1 if you have the <dlfcn.h> header file.
	#conf.addDefine('HAVE_DLFCN_H', '1')
	conf.checkHeader('dlfcn.h', 'HAVE_DLFCN_H')
 
	# TODO
	#Define if the GNU gettext() function is already present or preinstalled.
	conf.addDefine('HAVE_GETTEXT', '1')
 
	#Define to 1 if you have the <inttypes.h> header file.
	#conf.addDefine('HAVE_INTTYPES_H', '1')
	conf.checkHeader('inttypes.h', 'HAVE_INTTYPES_H')
 
	# TODO FIXME
	#Define if your <locale.h> file defines LC_MESSAGES.
	#conf.addDefine('HAVE_LC_MESSAGES', '1')
 
	#Define to 1 if you have the <locale.h> header file.
	#conf.addDefine('HAVE_LOCALE_H', '1')
	conf.checkHeader('locale.h', 'HAVE_LOCALE_H')

	#Define to 1 if you have the <memory.h> header file.
	#conf.addDefine('HAVE_MEMORY_H', '1')
	conf.checkHeader('memory.h', 'HAVE_MEMORY_H')

	#Define to 1 if you have the <stdint.h> header file.
	#conf.addDefine('HAVE_STDINT_H', '1')
	conf.checkHeader('stdint.h', 'HAVE_STDINT_H')

	#Define to 1 if you have the <stdlib.h> header file.
	#conf.addDefine('HAVE_STDLIB_H', '1')
	conf.checkHeader('stdlib.h', 'HAVE_STDLIB_H')
 
	#Define to 1 if you have the <strings.h> header file.
	#conf.addDefine('HAVE_STRINGS_H', '1')
	conf.checkHeader('strings.h', 'HAVE_STRINGS_H')
 
	#Define to 1 if you have the <string.h> header file.
	#conf.addDefine('HAVE_STRING_H', '1')
	conf.checkHeader('string.h', 'HAVE_STRING_H')
 
        #Define to 1 if you have the <sys/stat.h> header file.
        #conf.addDefine('HAVE_SYS_STAT_H', '1')
	conf.checkHeader('sys/stat.h', 'HAVE_SYS_STAT_H')
 
	#Define to 1 if you have the <sys/types.h> header file.
	#conf.addDefine('HAVE_SYS_TYPES_H', '1')
	conf.checkHeader('sys/types.h', 'HAVE_SYS_TYPES_H')
 
	#Define to 1 if you have the <unistd.h> header file.
	#conf.addDefine('HAVE_UNISTD_H', '1')
	conf.checkHeader('unistd.h', 'HAVE_UNISTD_H')



	conf.env.appendValue('CCFLAGS', '-DHAVE_CONFIG_H')

	# FIXME !!!!! this define looks necessary
	#conf.addDefine('GNOME_PARAM_GOPTION_CONTEXT', '"goption-context"')

	conf.writeConfigHeader('config.h')

def set_options(opt):
	# TODO add custom options here
	pass

def shutdown():
	if Params.g_options.install:
		import Runner
		command = 'gtk-update-icon-cache -f -t %s/icons/hicolor' % Params.g_build.m_allenvs['default']['DATADIR']
		ret = Runner.exec_command(command)
		if not ret:
			print "installation ok"
		else:
			print "gtk-update-icon-cache failed"

