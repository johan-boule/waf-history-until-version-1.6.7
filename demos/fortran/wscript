#! /usr/bin/env python
# encoding: utf-8
# DC 2008
# Thomas Nagy 2010 (ita)

top = '.'
out = 'build'

def set_options(opt):
	opt.tool_options('compiler_cc')
	opt.tool_options('compiler_fc')

def configure(conf):
	conf.check_tool('compiler_cc')
	conf.check_tool('compiler_fc')
	conf.env['FCFLAGS'] = ['-Wall', '-W']
	#conf.env['FORTRANMODPATH'] = ['mfloupi']
	#conf.env['FORTRANMODOUTPATH'] = ['floupi']
	#conf.env['INCLUDES'] = ['hfloupi']

	conf.check_fortran()
	conf.check_fortran_verbose_flag()
	conf.check_fortran_clib()

	#st, mangler = conf.check_fortran_mangling()
	#if not st:
	#	conf.fatal('cannot detect the mangling scheme')

	conf.check_fortran_dummy_main()

def build(bld):

	bld(
		features = 'fc',
		source   = 'hello.f')

	bld(
		features = 'fc fcprogram',
		source   = 'hello.f',
		target   = 'hello',
		uselib   = 'DEBUG')

	bld(
		features = 'fc fcshlib',
		source   = 'foo.f',
		target   = 'foo')

	bld(
		features = 'fc fcstlib',
		source   = 'foo.f',
		target   = 'foo')

	bld(
		features = 'fc fcprogram',
		source   = 'foo_pp.F',
		target   = 'foo',
		defines  = ['USEFOO', 'blah=1'])

	bld(
		features = 'fc fcprogram',
		includes = 'src/include',
		source   = 'src/hello_inc.f',
		target   = 'hello_inc')

	return
	bld(
		features = 'fc fcprogram',
		source   = 'src/calculator_main.f src/calculator.f',
		#source  = 'src/calculator.f src/calculator_main.f',
		#source  = 'src/calculator.f',
		target   = 'calculator')

