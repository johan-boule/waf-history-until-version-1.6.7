#! /usr/bin/env python
# encoding: utf-8

"""
This wscript demonstrates how to configure dependent library.
"""
import Options
import os.path

srcdir = '.'
blddir = '../out'

def configure(conf):
    conf.check_tool('gcc')
    lib_path = os.path.join(Options.launch_dir, '..', 'out', 'default')

    # This one is going to fail
    first_trial = conf.create_library_configurator()
    first_trial.name = 'a'
    first_trial.path = [lib_path]
    first_trial.message = "first trial failed due to dependencies between libraries"
    first_trial.run()

    # This one should work
    second_trial = conf.create_library_configurator()
    second_trial.name = 'a'
    second_trial.path = [lib_path]
    second_trial.libs = ['b']
    second_trial.lib_paths = [lib_path]
    second_trial.message = "This one should have not fail!!! :("
    second_trial.mandatory = True
    second_trial.run()

    # Note: order matters - if you have many libs in lib_configurator.libs, you should provide independent libraries first.

def build(bld):
    pass

def set_options(opt):
    pass
