#! /usr/bin/env python
# encoding: UTF-8
# Peter Forai
# Thomas Nagy, 2008

"""
Demonstrates how to create a c++ app that runs python scripts

Useful for apps providing script extensions
"""

VERSION='0.0.1'
APPNAME='swig_test'
srcdir = '.'
blddir = 'build'

def set_options(opt):
	opt.tool_options('g++')
	opt.tool_options('python')

def configure(conf):
	conf.check_tool('g++ python')
	conf.check_python_version((2,4,2))
	conf.check_python_headers()
	conf.check_tool('swig', tooldir='.')
	conf.check_swig_version('1.3.27')

def build(bld):
	obj = bld.new_task_gen('cxx', 'program', 'pyembed')
	obj.source = 'embed/src1.cpp embed/bind.swig'
	obj.target = 'embed/embed_demo'
	obj.swig_flags = '-c++ -python -dump_classes'
	obj.includes = '. embed'
	# the -dump_classes is for debugging

	bld.new_task_gen(
		features = 'cxx cshlib',
		source = 'extend/a.cpp',
		target = 'mylib',
		includes = 'extend',
		export_inc_dirs = 'extend',
		vnum = '1.2.3')

	bld.new_task_gen(
		features = 'cxx cshlib pyext',
		source = 'extend/python/test_swig_waf.i',
		target = '_test_swig_waf',
		swig_flags = '-c++ -python -Wall',
		includes = 'extend',
		uselib_local = 'mylib')


def shutdown():
	import os, stat
	try:
		os.stat('build/default/embed/embed_demo')
		print os.popen('PYTHONPATH=$PYTHONPATH:build/default/embed/ build/default/embed/embed_demo').read()
	except:
		pass

	try:
		print os.popen('PYTHONPATH=$PYTHONPATH:build/default/ LD_LIBRARY_PATH=$LD_LIBRARY_PATH:build/default/ python -c "import test_swig_waf;a=test_swig_waf.A();print \'Testing: a.add(2, 3) =\', a.add(2, 3)"').read()
	except:
		pass

